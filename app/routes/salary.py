from . import main
from flask import render_template, request, jsonify
from .utils.requires_login import requires_login
from app.models import Order, Comment, User
from sqlalchemy import desc, func
from datetime import datetime, timedelta
import re

@main.route('/salary')
@requires_login
def salary():
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    employee_id = request.args.get('employee', '')
    period = request.args.get('period', '')
    work_type = request.args.get('type', 'all')
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
    employees = User.query.filter(User.id != 0).all()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞—Ä–ø–ª–∞—Ç–µ
    salary_data = calculate_salary(employee_id, period, work_type)
    
    return render_template('salary.html', 
                         employees=employees,
                         salary_data=salary_data,
                         selected_employee=employee_id,
                         selected_period=period,
                         selected_type=work_type)

@main.route('/salary_data')
@requires_login
def salary_data():
    """API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞—Ä–ø–ª–∞—Ç–µ"""
    employee_id = request.args.get('employee', '')
    period = request.args.get('period', '')
    work_type = request.args.get('type', 'all')
    
    salary_data = calculate_salary(employee_id, period, work_type)
    return jsonify(salary_data)

def calculate_salary(employee_id='', period='', work_type='all'):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∑–∞—Ä–ø–ª–∞—Ç—ã
    """
    # –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
    orders_query = Order.query
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–µ—Ä–∏–æ–¥—É
    if period:
        try:
            year, month = period.split('-')
            start_date = datetime(int(year), int(month), 1)
            if int(month) == 12:
                end_date = datetime(int(year) + 1, 1, 1)
            else:
                end_date = datetime(int(year), int(month) + 1, 1)
            
            orders_query = orders_query.filter(
                Order.date >= start_date,
                Order.date < end_date
            )
        except:
            pass
    
    orders = orders_query.all()
    
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    salary_results = {}
    total_summary = {
        'orders_count': 0,
        'izgotovlenie_total': 0,
        'montaj_total': 0,
        'total_salary': 0
    }
    
    for order in orders:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ
        comments = Comment.query.filter(
            Comment.order_id == order.id,
            Comment.user_id == 0  # –¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        ).order_by(Comment.datetime).all()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
        izgotovlenie_worker = None
        montaj_worker = None
        izgotovlenie_price = order.izgotovlenie
        montaj_price = order.montaj
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        last_workers = {}
        current_status = None
        
        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
        for comment in comments:
            text = comment.text
            
            # –ü–æ–∏—Å–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
            status_match = re.search(r'‚è≥ –°—Ç–∞—Ç—É—Å: (.+?) -> (.+)', text)
            if status_match:
                old_status = status_match.group(1).strip()
                new_status = status_match.group(2).strip()
                current_status = new_status
            
            # –ü–æ–∏—Å–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
            executor_match = re.search(r'üë∑ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: (.+?) -> (.+)', text)
            if executor_match:
                old_executor = executor_match.group(1).strip()
                new_executor = executor_match.group(2).strip()
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
                if current_status:
                    last_workers[current_status] = new_executor
                
                # –ï—Å–ª–∏ –≤ —Ç–æ–º –∂–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
                if status_match:
                    if new_status == "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ":
                        izgotovlenie_worker = new_executor
                    elif new_status == "–ú–æ–Ω—Ç–∞–∂":
                        montaj_worker = new_executor
        
        # –ï—Å–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞,
        # –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
        if not izgotovlenie_worker and "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ" in last_workers:
            izgotovlenie_worker = last_workers["–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ"]
        
        if not montaj_worker and "–ú–æ–Ω—Ç–∞–∂" in last_workers:
            montaj_worker = last_workers["–ú–æ–Ω—Ç–∞–∂"]
        
        # –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
        if "–ó–∞–≤–µ—Ä—à–µ–Ω–æ" in last_workers:
            # –ï—Å–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –∏–∑–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—è, –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
            if not izgotovlenie_worker:
                # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ" –∏–ª–∏ "–ú–æ–Ω—Ç–∞–∂"
                for status in ["–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ", "–ú–æ–Ω—Ç–∞–∂"]:
                    if status in last_workers:
                        if status == "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ":
                            izgotovlenie_worker = last_workers[status]
                        elif status == "–ú–æ–Ω—Ç–∞–∂":
                            montaj_worker = last_workers[status]
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ –ª–æ–≥–∞—Ö, –±–µ—Ä–µ–º –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫–∞–∑–∞
        if not izgotovlenie_worker and order.manufacturer_id:
            izgotovlenie_worker = order.manufacturer.name if order.manufacturer else None
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Ä–∞–±–æ—Ç—ã
        if work_type == 'izgotovlenie' and not izgotovlenie_worker:
            continue
        if work_type == 'montaj' and not montaj_worker:
            continue
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
        if employee_id:
            employee = User.query.get(employee_id)
            if employee:
                employee_name = employee.name
                if izgotovlenie_worker != employee_name and montaj_worker != employee_name:
                    continue
        
        # –ü–æ–¥—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
        if izgotovlenie_worker and izgotovlenie_price:
            if izgotovlenie_worker not in salary_results:
                salary_results[izgotovlenie_worker] = {
                    'orders_count': 0,
                    'izgotovlenie_total': 0,
                    'montaj_total': 0,
                    'total_salary': 0
                }
            
            salary_results[izgotovlenie_worker]['izgotovlenie_total'] += izgotovlenie_price
            salary_results[izgotovlenie_worker]['total_salary'] += izgotovlenie_price
            salary_results[izgotovlenie_worker]['orders_count'] += 1
            
            total_summary['izgotovlenie_total'] += izgotovlenie_price
            total_summary['total_salary'] += izgotovlenie_price
            total_summary['orders_count'] += 1
        
        if montaj_worker and montaj_price:
            if montaj_worker not in salary_results:
                salary_results[montaj_worker] = {
                    'orders_count': 0,
                    'izgotovlenie_total': 0,
                    'montaj_total': 0,
                    'total_salary': 0
                }
            
            salary_results[montaj_worker]['montaj_total'] += montaj_price
            salary_results[montaj_worker]['total_salary'] += montaj_price
            salary_results[montaj_worker]['orders_count'] += 1
            
            total_summary['montaj_total'] += montaj_price
            total_summary['total_salary'] += montaj_price
            total_summary['orders_count'] += 1
    
    return {
        'employees': salary_results,
        'summary': total_summary
    } 