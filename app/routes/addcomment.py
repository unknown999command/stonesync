from . import main
from .utils.requires_login import requires_login  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
from .utils.new import new  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–≤–æ–∑–º–æ–∂–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–ª–∏ —Å—Ç–∞—Ç—É—Å)
from .utils.createthumbnail import create_thumbnail  # –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–Ω–∏–∞—Ç—é—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
from app.models import Comment, Order, CommentFile, CommentPhoto  # –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from app import db  # –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ SQLAlchemy
from flask import request, session, jsonify, current_app  # –ò–º–ø–æ—Ä—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ Flask –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
import datetime, asyncio, os, uuid  # –ò–º–ø–æ—Ä—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏, —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∏ UUID
from datetime import datetime  # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∏–º–ø–æ—Ä—Ç datetime –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏

@main.route('/add_comment', methods=['POST'])
@requires_login  # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
def add_comment():
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø—É—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    basedir = current_app.root_path
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—É—Ç–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤
    STATIC_FOLDER = os.path.join(basedir, 'static')
    IMAGE_UPLOAD_FOLDER = os.path.join(STATIC_FOLDER, 'photo')
    FILE_UPLOAD_FOLDER = os.path.join(STATIC_FOLDER, 'files')

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏ ID –∑–∞–∫–∞–∑–∞ –∏–∑ —Ñ–æ—Ä–º—ã
    comment_text = request.form.get('comment-text')
    order_id = request.form.get('order_id')
    # –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞ –ø–æ –µ–≥–æ ID
    order = Order.query.filter(Order.id == order_id).first()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤
    files = request.files.getlist('files')
    non_empty_files = [file for file in files if file.filename]
    file_count = len(non_empty_files)  # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    comment = Comment(
        datetime=datetime.now(),  # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
        text=comment_text,
        user_id=session.get('user_id'),  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–µ—Å—Å–∏–∏
        order_id=order_id  # ID –∑–∞–∫–∞–∑–∞
    )
    db.session.add(comment)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    new(order_id, session.get('user_id'))  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
    db.session.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

    # –ò–º–ø–æ—Ä—Ç –∏ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
    from app.bot.notf import send_notification
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if order:
        attach = f'<b>\n\n–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ: {file_count} —Ñ–∞–π–ª–æ–≤</b>' if file_count > 0 else ""  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö
        asyncio.run(send_notification(
            order.manufacturer_id,
            f"<blockquote>üí¨ <b>–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n{order.address}</blockquote>\n\n<b>üë∑ {comment.user.name}\n----------------------------------------</b>\n{comment.text}{attach}", 
            order.id,
            True
        ))
        asyncio.run(send_notification(
            order.manufacturer_id if str(session.get('user_id')) != str(order.manufacturer_id) else '', 
            f"<blockquote>üí¨ <b>–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n{order.address}</blockquote>\n\n<b>üë∑ {comment.user.name}\n----------------------------------------</b>\n{comment.text}{attach}", 
            order.id,
            False
        ))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
    handle_files(files, comment.id, IMAGE_UPLOAD_FOLDER, FILE_UPLOAD_FOLDER)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    new_comment = Comment.query.get(comment.id)
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    comment_data = {
        'user': new_comment.user.name,
        'color': new_comment.user.color,
        'datetime': new_comment.datetime.strftime('%H:%M %d.%m'),  # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        'text': new_comment.text,
        'photos': [photo.path for photo in new_comment.comment_photos],  # –ü—É—Ç–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        'files': [file.path for file in new_comment.comment_files]  # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    }
    return jsonify(comment_data), 200  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å –∫–æ–¥–æ–º —É—Å–ø–µ—Ö–∞ 200

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
def is_image(file):
    if file and file.content_type:
        return file.content_type.startswith('image/')
    return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
def handle_files(files, comment_id, image_upload_folder, file_upload_folder):
    for file in files:
        if file and file.filename:  # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç –∏–º—è
            file_extension = os.path.splitext(file.filename)[1]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            if not file_extension and file.content_type:
                import mimetypes
                file_extension = mimetypes.guess_extension(file.content_type) or '.jpg'
            unique_filename = f"{uuid.uuid4().hex}{file_extension}"  # –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é UUID
            if is_image(file):  # –ï—Å–ª–∏ —Ñ–∞–π–ª - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                file_path = os.path.join(image_upload_folder, unique_filename)  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                file.save(file_path)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ –¥–∏—Å–∫
                # –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                thumbnail_filename = f"small_{unique_filename}"
                thumbnail_path = os.path.join(image_upload_folder, thumbnail_filename)
                create_thumbnail(file_path, thumbnail_path)  # –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                db.session.add(CommentPhoto(comment_id=comment_id, path=unique_filename, small_path=thumbnail_filename))
            else:
                # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ñ–∞–π–ª
                file_path = os.path.join(file_upload_folder, unique_filename)
                file.save(file_path)
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                db.session.add(CommentFile(comment_id=comment_id, path=unique_filename))
    db.session.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
